https://leetcode.com/problems/count-the-number-of-consistent-strings///
// brute force
import java.util.HashSet;
class Solution {
    public int countConsistentStrings(String allowed, String[] words) {
        int result=0;
        
        for(int i=0;i<words.length;i++){
            boolean flag=true;
            for(int j =0;j<words[i].length();j++){
                if(!allowed.contains(Character.toString(words[i].charAt(j)))){
                    System.out.print(Character.toString(words[i].charAt(j))+" ");
                    flag=false;
                    break;
                }
                    
            }
            if(flag==true) result++;
        }
        return result;
    }
}

// sol 2
import java.util.HashSet;
class Solution {
   public int countConsistentStrings(String allowed, String[] words) {
	int count = words.length;
	int[] store = new int[26];

	for (char c : allowed.toCharArray()){
		store[c-'a']++;
	}

	for (String word : words) {
		
		for (char c : word.toCharArray()) {
			if (store[c-'a'] <= 0){
				count--;
				break;
			}
		}
	}
	return count;
}
}
    // HashSet
    import java.util.HashSet;
class Solution {
   public int countConsistentStrings(String allowed, String[] words) {
	int n= words.length;
        HashSet<Character> map = new HashSet<>();
        for(int i=0;i<allowed.length();i++){
            map.add(allowed.charAt(i));
        }
        for(String el : words){
            for(int i=0;i<el.length();i++){
                if(map.contains(el.charAt(i))==false){n--;break;}
            }
        }
        return n;
    }

}
    
